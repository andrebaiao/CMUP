{"ast":null,"code":"import _regeneratorRuntime from \"/home/andre/Desktop/work/mestrado/2-semestre/CMUP/project/CMUP/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/andre/Desktop/work/mestrado/2-semestre/CMUP/project/CMUP/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nvar useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(part_of_day, monday, tuesday, wednesday, thrusday, friday, saturday, sunday) {\n  return {\n    part_of_day: part_of_day,\n    monday: monday,\n    tuesday: tuesday,\n    wednesday: wednesday,\n    thrusday: thrusday,\n    friday: friday,\n    saturday: saturday,\n    sunday: sunday\n  };\n}\n\nvar rows = [createData('BreakFast', 'Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Lunch', 'Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Dinner', 262, 16.0, 24, 6.0), createData('Night', 305, 3.7, 67, 4.3)];\n\nfunction getPatientData() {\n  return _getPatientData.apply(this, arguments);\n}\n\nfunction _getPatientData() {\n  _getPatientData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var patient_id, url, data, result, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"Chamei funçao getPatientData\");\n            localStorage.setItem(\"patient_id\", 1);\n            patient_id = localStorage.getItem(\"patient_id\");\n            url = \"http://localhost:9000/patients/\" + patient_id;\n            _context.next = 6;\n            return fetch(url, {\n              method: 'GET',\n              headers: new Headers({\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem('token')\n              })\n            });\n\n          case 6:\n            data = _context.sent;\n            result = {};\n            _context.next = 10;\n            return data.json();\n\n          case 10:\n            response = _context.sent;\n            result[\"pills_not_took\"] = JSON.parse(response.message.pills_not_took);\n            result[\"treatment\"] = JSON.parse(response.message.treatment);\n            result[\"total_pills_not_took\"] = result[\"pills_not_took\"].length;\n            result[\"total_pills_took\"] = JSON.parse(response.message.total_pills_took);\n            return _context.abrupt(\"return\", result);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getPatientData.apply(this, arguments);\n}\n\nexport default function BasicTable() {\n  _s();\n\n  var classes = useStyles();\n  var data;\n  var my_rows = [];\n  getPatientData().then(function (res) {\n    data = res;\n    var parts_of_day = [\"BreakFast\", \"Lunch\", \"Dinner\", \"Night\"];\n\n    var _loop = function _loop() {\n      var parameters = [parts_of_day[i], \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      data[\"treatment\"].map(function (p) {\n        if (p.part_of_day == i + 1) {\n          parameters[p.day] = parameters[p.day] + \"; \" + p.quantity + \" \" + p.name + \" pills\";\n        }\n      });\n      my_rows.push(createData(parameters[0], parameters[1], parameters[2], parameters[3], parameters[4], parameters[5], parameters[6], parameters[7], parameters[8]));\n    };\n\n    for (var i = 0; i < 4; i++) {\n      _loop();\n    }\n  });\n  console.log(my_rows);\n}\n\n_s(BasicTable, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/home/andre/Desktop/work/mestrado/2-semestre/CMUP/project/CMUP/Frontend/src/views/Scheduler.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","createData","part_of_day","monday","tuesday","wednesday","thrusday","friday","saturday","sunday","rows","getPatientData","console","log","localStorage","setItem","patient_id","getItem","url","fetch","method","headers","Headers","data","result","json","response","JSON","parse","message","pills_not_took","treatment","length","total_pills_took","BasicTable","classes","my_rows","then","res","parts_of_day","parameters","i","map","p","day","quantity","name","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(part_of_day, monday, tuesday, wednesday, thrusday, friday, saturday, sunday) {\n  return { part_of_day, monday, tuesday, wednesday, thrusday, friday, saturday, sunday };\n}\n\nconst rows = [\n  createData('BreakFast','Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Lunch','Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Dinner', 262, 16.0, 24, 6.0),\n  createData('Night', 305, 3.7, 67, 4.3),\n];\n\n\nasync function getPatientData(){\n\n  console.log(\"Chamei funçao getPatientData\");\n\n  localStorage.setItem(\"patient_id\", 1);\n  let patient_id = localStorage.getItem(\"patient_id\");\n\n  let url = \"http://localhost:9000/patients/\" + patient_id;\n\n  let data = await fetch(url, {\n    method: 'GET',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem('token')\n    })\n  });\n\n\n  let result = {};\n\n  let response = await data.json();\n  \n  result[\"pills_not_took\"] = JSON.parse(response.message.pills_not_took);\n  result[\"treatment\"] = JSON.parse(response.message.treatment);\n  result[\"total_pills_not_took\"]  = result[\"pills_not_took\"].length;\n  result[\"total_pills_took\"] = JSON.parse(response.message.total_pills_took);\n\n  return result;\n}\n\nexport default function BasicTable() {\n\n  const classes = useStyles();\n\n  let data;\n\n  const my_rows = [];\n\n  getPatientData().then((res)=>{\n    data = res;\n\n\n    let parts_of_day = [\"BreakFast\", \"Lunch\", \"Dinner\", \"Night\"];\n\n    for(var i = 0; i < 4; i++){\n      \n      let parameters = [parts_of_day[i], \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n    \n      data[\"treatment\"].map((p)=>{\n        if(p.part_of_day == i + 1){\n          parameters[p.day] = parameters[p.day] + \"; \"+  p.quantity + \" \" +p.name+\" pills\"\n        }\n      });\n\n      my_rows.push(createData(parameters[0], parameters[1],parameters[2],parameters[3],parameters[4],parameters[5],parameters[6], parameters[7], parameters[8]))\n\n    }\n\n\n  });\n\n  console.log(my_rows);\n\n  \n\n\n  \n}\n"]},"metadata":{},"sourceType":"module"}